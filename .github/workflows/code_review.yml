name: Code Review Assistant

permissions:
  pull-requests: write
  issues: write

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main

jobs:
  code_review:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black pytest

      # Run Flake8 for linting
      - name: Run Flake8 (Linting)
        id: flake8
        run: |
          flake8 . > flake8_report.txt || true

      # Check code formatting with Black
      - name: Check Formatting (Black)
        id: black
        run: |
          black --check . > black_report.txt || true

      # Run tests with Pytest
      - name: Run Tests
        id: pytest
        run: |
          pytest --maxfail=5 --disable-warnings > pytest_report.txt || true

      # DeepSource analysis
      - name: Run DeepSource Analysis
        uses: deepsourcelabs/cli-action@v2
        id: deepsource
        with:
          api_token: ${{ secrets.DEEPSOURCE_DSN }}
          config_file: .deepsource.toml
          directory: . # Directory to analyze

      # Combine reports
      - name: Combine Reports
        run: |
          echo "### Code Review Results" > comment.md
          echo "#### Flake8 Issues" >> comment.md
          cat flake8_report.txt >> comment.md || echo "No issues found." >> comment.md
          echo "\n#### Black Formatting Check" >> comment.md
          cat black_report.txt >> comment.md || echo "No issues found." >> comment.md
          echo "\n#### Pytest Results" >> comment.md
          cat pytest_report.txt >> comment.md || echo "No test failures." >> comment.md
        shell: bash

      # Post comment to PR
      - name: Comment on Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('comment.md', 'utf8');
            const { data: comments } = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: context.payload.pull_request.number
            });

            const botComment = comments.find(comment => comment.user.type === 'Bot' && comment.body.includes('### Code Review Results'));
            
            if (botComment) {
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.payload.pull_request.number,
                body: comment
              });
            }
