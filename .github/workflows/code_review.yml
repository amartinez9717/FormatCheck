name: Code Review

permissions:
  pull-requests: write
  issues: write

on:
  pull_request:
    paths:
      - '**/*.py'  # adjust based on your language (e.g., '*.js' for JS)
jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Debug Python Environment
        run: |
          python --version
          which python
          pip list

      # Step 4: Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 numpy
          pip install -r requirements.txt

      # Step 2: Run static analysis
      - name: Run Static Analysis (flake8)
        id: flake8
        run: |
          python static_analysis.py

      # Step 3: Load ML Model and run pattern recognition
      - name: Run Pattern Recognition using ML model
        id: pattern_recognition
        run: |
          python analyze_code.py  # This script will load the model and run the analysis

      # Step 4: Combine static analysis and ML feedback
      - name: Combine Feedback and generate results
        id: generate_feedback
        run: |
          python generate_feedback.py  # Script to combine feedback from both tools and generate final report

      # Step 5: Upload the feedback report as an artifact
      - name: Upload Feedback Artifact
        uses: actions/upload-artifact@v3
        with:
          name: code-review-feedback
          path: feedback_report.txt  # Adjust based on your output

      - name: Comment on Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = 'feedback_report.txt';
            if (fs.existsSync(path)) {
              const feedback = fs.readFileSync(path, 'utf8');
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: feedback
              });
            } else {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: "Code analysis failed to generate a report. Please check the workflow logs for details."
              });
            }         